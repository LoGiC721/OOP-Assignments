 bool isGood(int t,vector<vector<int>>&grid)
    {
        int N = grid.size();
        int n = grid.size();
        bool vis[grid.size()][grid.size()];
        memset(vis,false,sizeof(vis));
        queue<pair<int,int>>q;
        q.push({0,0});
    
        while(!q.empty())
        {
            pair<int,int>p = q.front();
            q.pop();
            int x_dir[4] = {0,0,-1,1};
            int y_dir[4] = {1,-1,0,0};
            int x = p.first;
            int y = p.second;
            vis[x][y] = 1;
            if(x==n-1 && y== n-1) return true;
            for(int i = 0;i<4;i++)
            {
               int nx = x+x_dir[i];
               int ny = y+y_dir[i];
               if(nx>=0 && ny>=0 && ny<N && nx < N && grid[nx][ny]<=t && !vis[nx][ny])
               {
                   vis[nx][ny]  =1;
                   q.push({nx,ny});
               }
            }
        }
        return false;
    }